const fetch = require('node-fetch');
const axios = require('axios');

// Fungsi untuk mengonversi kode negara ke nama lengkap dengan bendera
const mooCountry = (value) => {
  const regionMap = {
        AF: 'Afganistan ğŸ‡¦ğŸ‡«',
        AX: 'Kepulauan Aland ğŸ‡¦ğŸ‡½',
        AL: 'Albania ğŸ‡¦ğŸ‡±',
        DZ: 'Aljazair ğŸ‡©ğŸ‡¿',
        AS: 'Samoa Amerika ğŸ‡¦ğŸ‡¸',
        AD: 'Andorra ğŸ‡¦ğŸ‡©',
        AO: 'Angola ğŸ‡¦ğŸ‡´',
        AI: 'Anguilla ğŸ‡¦ğŸ‡®',
        AQ: 'Antartika ğŸ‡¦ğŸ‡¶',
        AG: 'Antigua dan Barbuda ğŸ‡¦ğŸ‡¬',
        AR: 'Argentina ğŸ‡¦ğŸ‡·',
        AM: 'Armenia ğŸ‡¦ğŸ‡²',
        AW: 'Aruba ğŸ‡¦ğŸ‡¼',
        AU: 'Australia ğŸ‡¦ğŸ‡º',
        AT: 'Austria ğŸ‡¦ğŸ‡¹',
        AZ: 'Azerbaijan ğŸ‡¦ğŸ‡¿',
        BS: 'Bahama ğŸ‡§ğŸ‡¸',
        BH: 'Bahrain ğŸ‡§ğŸ‡­',
        BD: 'Bangladesh ğŸ‡§ğŸ‡©',
        BB: 'Barbados ğŸ‡§ğŸ‡§',
        BY: 'Belarus ğŸ‡§ğŸ‡¾',
        BE: 'Belgia ğŸ‡§ğŸ‡ª',
        BZ: 'Belize ğŸ‡§ğŸ‡¿',
        BJ: 'Benin ğŸ‡§ğŸ‡¯',
        BM: 'Bermuda ğŸ‡§ğŸ‡²',
        BT: 'Bhutan ğŸ‡§ğŸ‡¹',
        BO: 'Bolivia ğŸ‡§ğŸ‡´',
        BQ: 'Bonaire, Sint Eustatius dan Saba ğŸ‡§ğŸ‡¶',
        BA: 'Bosnia dan Herzegovina ğŸ‡§ğŸ‡¦',
        BW: 'Botswana ğŸ‡§ğŸ‡¼',
        BV: 'Pulau Bouvet ğŸ‡§ğŸ‡»',
        BR: 'Brazil ğŸ‡§ğŸ‡·',
        IO: 'Wilayah Samudra Hindia Britania ğŸ‡®ğŸ‡´',
        BN: 'Brunei Darussalam ğŸ‡§ğŸ‡³',
        BG: 'Bulgaria ğŸ‡§ğŸ‡¬',
        BF: 'Burkina Faso ğŸ‡§ğŸ‡«',
        BI: 'Burundi ğŸ‡§ğŸ‡®',
        CV: 'Cabo Verde ğŸ‡¨ğŸ‡»',
        KH: 'Kamboja ğŸ‡°ğŸ‡­',
        CM: 'Kamerun ğŸ‡¨ğŸ‡²',
        CA: 'Kanada ğŸ‡¨ğŸ‡¦',
        KY: 'Kepulauan Cayman ğŸ‡°ğŸ‡¾',
        CF: 'Republik Afrika Tengah ğŸ‡¨ğŸ‡«',
        TD: 'Chad ğŸ‡¹ğŸ‡©',
        CL: 'Chili ğŸ‡¨ğŸ‡±',
        CN: 'Tiongkok ğŸ‡¨ğŸ‡³',
        CX: 'Pulau Natal ğŸ‡¨ğŸ‡½',
        CC: 'Kepulauan Cocos (Keeling) ğŸ‡¨ğŸ‡¨',
        CO: 'Kolombia ğŸ‡¨ğŸ‡´',
        KM: 'Komoro ğŸ‡°ğŸ‡²',
        CG: 'Kongo ğŸ‡¨ğŸ‡¬',
        CD: 'Republik Demokratik Kongo ğŸ‡¨ğŸ‡©',
        CK: 'Kepulauan Cook ğŸ‡¨ğŸ‡°',
        CR: 'Kosta Rika ğŸ‡¨ğŸ‡·',
        HR: 'Kroasia ğŸ‡­ğŸ‡·',
        CU: 'Kuba ğŸ‡¨ğŸ‡º',
        CW: 'CuraÃ§ao ğŸ‡¨ğŸ‡¼',
        CY: 'Siprus ğŸ‡¨ğŸ‡¾',
        CZ: 'Republik Ceko ğŸ‡¨ğŸ‡¿',
        DK: 'Denmark ğŸ‡©ğŸ‡°',
        DJ: 'Djibouti ğŸ‡©ğŸ‡¯',
        DM: 'Dominika ğŸ‡©ğŸ‡²',
        DO: 'Republik Dominika ğŸ‡©ğŸ‡´',
        EC: 'Ekuador ğŸ‡ªğŸ‡¨',
        EG: 'Mesir ğŸ‡ªğŸ‡¬',
        SV: 'El Salvador ğŸ‡¸ğŸ‡»',
        GQ: 'Guinea Ekuatorial ğŸ‡¬ğŸ‡¶',
        ER: 'Eritrea ğŸ‡ªğŸ‡·',
        EE: 'Estonia ğŸ‡ªğŸ‡ª',
        ET: 'Etiopia ğŸ‡ªğŸ‡¹',
        FK: 'Kepulauan Falkland (Malvinas) ğŸ‡«ğŸ‡°',
        FO: 'Kepulauan Faroe ğŸ‡«ğŸ‡´',
        FJ: 'Fiji ğŸ‡«ğŸ‡¯',
        FI: 'Finlandia ğŸ‡«ğŸ‡®',
        FR: 'Prancis ğŸ‡«ğŸ‡·',
        GF: 'Guyana Prancis ğŸ‡¬ğŸ‡«',
        PF: 'Polinesia Prancis ğŸ‡µğŸ‡«',
        TF: 'Wilayah Selatan Prancis ğŸ‡¹ğŸ‡«',
        GA: 'Gabon ğŸ‡¬ğŸ‡¦',
        GM: 'Gambia ğŸ‡¬ğŸ‡²',
        GE: 'Georgia ğŸ‡¬ğŸ‡ª',
        DE: 'Jerman ğŸ‡©ğŸ‡ª',
        GH: 'Ghana ğŸ‡¬ğŸ‡­',
        GI: 'Gibraltar ğŸ‡¬ğŸ‡®',
        GR: 'Yunani ğŸ‡¬ğŸ‡·',
        GL: 'Greenland ğŸ‡¬ğŸ‡±',
        GD: 'Grenada ğŸ‡¬ğŸ‡©',
        GP: 'Guadeloupe ğŸ‡¬ğŸ‡µ',
        GU: 'Guam ğŸ‡¬ğŸ‡º',
        GT: 'Guatemala ğŸ‡¬ğŸ‡¹',
        GG: 'Guernsey ğŸ‡¬ğŸ‡¬',
        GN: 'Guinea ğŸ‡¬ğŸ‡³',
        GW: 'Guinea-Bissau ğŸ‡¬ğŸ‡¼',
        GY: 'Guyana ğŸ‡¬ğŸ‡¾',
        HT: 'Haiti ğŸ‡­ğŸ‡¹',
        HM: 'Pulau Heard dan Kepulauan McDonald ğŸ‡­ğŸ‡²',
        VA: 'Kota Vatikan ğŸ‡»ğŸ‡¦',
        HN: 'Honduras ğŸ‡­ğŸ‡³',
        HK: 'Hong Kong ğŸ‡­ğŸ‡°',
        HU: 'Hungaria ğŸ‡­ğŸ‡º',
        IS: 'Islandia ğŸ‡®ğŸ‡¸',
        IN: 'India ğŸ‡®ğŸ‡³',
        ID: 'Indonesia ğŸ‡®ğŸ‡©',
        IR: 'Iran ğŸ‡®ğŸ‡·',
        IQ: 'Irak ğŸ‡®ğŸ‡¶',
        IE: 'Irlandia ğŸ‡®ğŸ‡ª',
        IM: 'Pulau Man ğŸ‡®ğŸ‡²',
        IL: 'Israel ğŸ‡®ğŸ‡±',
        IT: 'Italia ğŸ‡®ğŸ‡¹',
        JM: 'Jamaika ğŸ‡¯ğŸ‡²',
        JP: 'Jepang ğŸ‡¯ğŸ‡µ',
        JE: 'Jersey ğŸ‡¯ğŸ‡ª',
        JO: 'Yordania ğŸ‡¯ğŸ‡´',
        KZ: 'Kazakhstan ğŸ‡°ğŸ‡¿',
        KE: 'Kenya ğŸ‡°ğŸ‡ª',
        KI: 'Kiribati ğŸ‡°ğŸ‡®',
        KP: 'Korea Utara ğŸ‡°ğŸ‡µ',
        KR: 'Korea Selatan ğŸ‡°ğŸ‡·',
        KW: 'Kuwait ğŸ‡°ğŸ‡¼',
        KG: 'Kirgizstan ğŸ‡°ğŸ‡¬',
        LA: 'Laos ğŸ‡±ğŸ‡¦',
        LV: 'Latvia ğŸ‡±ğŸ‡»',
        LB: 'Lebanon ğŸ‡±ğŸ‡§',
        LS: 'Lesotho ğŸ‡±ğŸ‡¸',
        LR: 'Liberia ğŸ‡±ğŸ‡·',
        LY: 'Libya ğŸ‡±ğŸ‡¾',
        LI: 'Liechtenstein ğŸ‡±ğŸ‡®',
        LT: 'Lituania ğŸ‡±ğŸ‡¹',
        LU: 'Luksemburg ğŸ‡±ğŸ‡º',
        MO: 'Makau ğŸ‡²ğŸ‡´',
        MK: 'Makedonia Utara ğŸ‡²ğŸ‡°',
        MG: 'Madagaskar ğŸ‡²ğŸ‡¬',
        MW: 'Malawi ğŸ‡²ğŸ‡¼',
        MY: 'Malaysia ğŸ‡²ğŸ‡¾',
        MV: 'Maladewa ğŸ‡²ğŸ‡»',
        ML: 'Mali ğŸ‡²ğŸ‡±',
        MT: 'Malta ğŸ‡²ğŸ‡¹',
        MH: 'Kepulauan Marshall ğŸ‡²ğŸ‡­',
        MQ: 'Martinique ğŸ‡²ğŸ‡¶',
        MR: 'Mauritania ğŸ‡²ğŸ‡·',
        MU: 'Mauritius ğŸ‡²ğŸ‡º',
        YT: 'Mayotte ğŸ‡¾ğŸ‡¹',
        MX: 'Meksiko ğŸ‡²ğŸ‡½',
        FM: 'Mikronesia ğŸ‡«ğŸ‡²',
        MD: 'Moldova ğŸ‡²ğŸ‡©',
        MC: 'Monako ğŸ‡²ğŸ‡¨',
        MN: 'Mongolia ğŸ‡²ğŸ‡³',
        ME: 'Montenegro ğŸ‡²ğŸ‡ª',
        MS: 'Montserrat ğŸ‡²ğŸ‡¸',
        MA: 'Maroko ğŸ‡²ğŸ‡¦',
        MZ: 'Mozambik ğŸ‡²ğŸ‡¿',
        MM: 'Myanmar (Burma) ğŸ‡²ğŸ‡²',
        NA: 'Namibia ğŸ‡³ğŸ‡¦',
        NR: 'Nauru ğŸ‡³ğŸ‡·',
        NP: 'Nepal ğŸ‡³ğŸ‡µ',
        NL: 'Belanda ğŸ‡³ğŸ‡±',
        NC: 'Kaledonia Baru ğŸ‡³ğŸ‡¨',
        NZ: 'Selandia Baru ğŸ‡³ğŸ‡¿',
        NI: 'Nikaragua ğŸ‡³ğŸ‡®',
        NE: 'Niger ğŸ‡³ğŸ‡ª',
        NG: 'Nigeria ğŸ‡³ğŸ‡¬',
        NU: 'Niue ğŸ‡³ğŸ‡º',
        NF: 'Pulau Norfolk ğŸ‡³ğŸ‡«',
        MP: 'Kepulauan Mariana Utara ğŸ‡²ğŸ‡µ',
        NO: 'Norwegia ğŸ‡³ğŸ‡´',
        OM: 'Oman ğŸ‡´ğŸ‡²',
        PK: 'Pakistan ğŸ‡µğŸ‡°',
        PW: 'Palau ğŸ‡µğŸ‡¼',
        PS: 'Palestina ğŸ‡µğŸ‡¸',
        PA: 'Panama ğŸ‡µğŸ‡¦',
        PG: 'Papua Nugini ğŸ‡µğŸ‡¬',
        PY: 'Paraguay ğŸ‡µğŸ‡¾',
        PE: 'Peru ğŸ‡µğŸ‡ª',
        PH: 'Filipina ğŸ‡µğŸ‡­',
        PN: 'Pitcairn ğŸ‡µğŸ‡³',
        PL: 'Polandia ğŸ‡µğŸ‡±',
        PT: 'Portugal ğŸ‡µğŸ‡¹',
        PR: 'Puerto Rico ğŸ‡µğŸ‡·',
        QA: 'Qatar ğŸ‡¶ğŸ‡¦',
        RE: 'RÃ©union ğŸ‡·ğŸ‡ª',
        RO: 'Rumania ğŸ‡·ğŸ‡´',
        RU: 'Rusia ğŸ‡·ğŸ‡º',
        RW: 'Rwanda ğŸ‡·ğŸ‡¼',
        BL: 'Saint BarthÃ©lemy ğŸ‡§ğŸ‡±',
        SH: 'Saint Helena ğŸ‡¸ğŸ‡­',
        KN: 'Saint Kitts dan Nevis ğŸ‡°ğŸ‡³',
        LC: 'Saint Lucia ğŸ‡±ğŸ‡¨',
        MF: 'Saint Martin ğŸ‡²ğŸ‡«',
        PM: 'Saint Pierre dan Miquelon ğŸ‡µğŸ‡²',
        VC: 'Saint Vincent dan Grenadines ğŸ‡»ğŸ‡¨',
        WS: 'Samoa ğŸ‡¼ğŸ‡¸',
        SM: 'San Marino ğŸ‡¸ğŸ‡²',
        ST: 'Sao Tome dan Principe ğŸ‡¸ğŸ‡¹',
        SA: 'Arab Saudi ğŸ‡¸ğŸ‡¦',
        SN: 'Senegal ğŸ‡¸ğŸ‡³',
        RS: 'Serbia ğŸ‡·ğŸ‡¸',
        SC: 'Seychelles ğŸ‡¸ğŸ‡¨',
        SL: 'Sierra Leone ğŸ‡¸ğŸ‡±',
        SG: 'Singapura ğŸ‡¸ğŸ‡¬',
        SX: 'Sint Maarten ğŸ‡¸ğŸ‡½',
        SK: 'Slovakia ğŸ‡¸ğŸ‡°',
        SI: 'Slovenia ğŸ‡¸ğŸ‡®',
        SB: 'Kepulauan Solomon ğŸ‡¸ğŸ‡§',
        SO: 'Somalia ğŸ‡¸ğŸ‡´',
        ZA: 'Afrika Selatan ğŸ‡¿ğŸ‡¦',
        GS: 'Georgia Selatan dan Kepulauan Sandwich Selatan ğŸ‡¬ğŸ‡¸',
        SS: 'Sudan Selatan ğŸ‡¸ğŸ‡¸',
        ES: 'Spanyol ğŸ‡ªğŸ‡¸',
        LK: 'Sri Lanka ğŸ‡±ğŸ‡°',
        SD: 'Sudan ğŸ‡¸ğŸ‡©',
        SR: 'Suriname ğŸ‡¸ğŸ‡·',
        SJ: 'Svalbard dan Jan Mayen ğŸ‡¸ğŸ‡¯',
        SE: 'Swedia ğŸ‡¸ğŸ‡ª',
        CH: 'Swiss ğŸ‡¨ğŸ‡­',
        SY: 'Suriah ğŸ‡¸ğŸ‡¾',
        TW: 'Taiwan ğŸ‡¹ğŸ‡¼',
        TJ: 'Tajikistan ğŸ‡¹ğŸ‡¯',
        TZ: 'Tanzania ğŸ‡¹ğŸ‡¿',
        TH: 'Thailand ğŸ‡¹ğŸ‡­',
        TL: 'Timor-Leste ğŸ‡¹ğŸ‡±',
        TG: 'Togo ğŸ‡¹ğŸ‡¬',
        TK: 'Tokelau ğŸ‡¹ğŸ‡°',
        TO: 'Tonga ğŸ‡¹ğŸ‡´',
        TT: 'Trinidad dan Tobago ğŸ‡¹ğŸ‡¹',
        TN: 'Tunisia ğŸ‡¹ğŸ‡³',
        TR: 'Turki ğŸ‡¹ğŸ‡·',
        TM: 'Turkmenistan ğŸ‡¹ğŸ‡²',
        TC: 'Kepulauan Turks dan Caicos ğŸ‡¹ğŸ‡¨',
        TV: 'Tuvalu ğŸ‡¹ğŸ‡»',
        UG: 'Uganda ğŸ‡ºğŸ‡¬',
        UA: 'Ukraina ğŸ‡ºğŸ‡¦',
        AE: 'Uni Emirat Arab ğŸ‡¦ğŸ‡ª',
        GB: 'Inggris Raya ğŸ‡¬ğŸ‡§',
        US: 'Amerika Serikat ğŸ‡ºğŸ‡¸',
        UM: 'Kepulauan Terluar Kecil Amerika Serikat ğŸ‡ºğŸ‡²',
        UY: 'Uruguay ğŸ‡ºğŸ‡¾',
        UZ: 'Uzbekistan ğŸ‡ºğŸ‡¿',
        VU: 'Vanuatu ğŸ‡»ğŸ‡º',
        VE: 'Venezuela ğŸ‡»ğŸ‡ª',
        VN: 'Vietnam ğŸ‡»ğŸ‡³',
        VG: 'Kepulauan Virgin Britania Raya ğŸ‡»ğŸ‡¬',
        VI: 'Kepulauan Virgin Amerika Serikat ğŸ‡»ğŸ‡®',
        WF: 'Wallis dan Futuna ğŸ‡¼ğŸ‡«',
        EH: 'Sahara Barat ğŸ‡ªğŸ‡­',
        YE: 'Yaman ğŸ‡¾ğŸ‡ª',
        ZM: 'Zambia ğŸ‡¿ğŸ‡²',
        ZW: 'Zimbabwe ğŸ‡¿ğŸ‡¼',
    };


  // Mengembalikan nama region dengan bendera jika ditemukan, atau 'Tidak diketahui' jika tidak
  return regionMap[value] || 'Tidak diketahui';
};

async function stalkFreeFire(id) {
let data = JSON.stringify({
  "app_id": 100067,
  "login_id": id
});

let config = {
  method: 'POST',
  url: 'https://kiosgamer.co.id/api/auth/player_id_login',
  headers: {
    'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Mobile Safari/537.36',
    'Accept': 'application/json, text/plain, */*',
    'Content-Type': 'application/json',
    'sec-ch-ua-platform': '"Android"',
    'sec-ch-ua': '"Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"',
    'sec-ch-ua-mobile': '?1',
    'Origin': 'https://kiosgamer.co.id',
    'Sec-Fetch-Site': 'same-origin',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Dest': 'empty',
    'Referer': 'https://kiosgamer.co.id/',
    'Accept-Language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7',
    'Cookie': 'source=mb; region=CO.ID; mspid2=d175049875f78d90e7618f10b5930826; _ga=GA1.1.1096715143.1744003536; language=id; datadome=Oh~Qd6USZYfQps_cIi6V06MyaYyU4M8goxVzxq6lyoLUu6ml9hRkiA6eiMdmFuBr6hwB52PiydIWCRZxWtdE1FQLBGu7nqW5mfbBfXbSLbhg7XlKtPfOVTOzJ4OhLFgm; session_key=4txikks54uzrbj9hz174ic2g8ma0zd2p; _ga_Q7ESEPHPSF=GS1.1.1744003535.1.1.1744004048.0.0.0'
  },
  data: data
};

const api = await axios.request(config);
return api.data;
}
module.exports = function(app) {
  app.get('/stalk/ff', async (req, res) => {
    const { apikey, id } = req.query;
    const now = new Date().toISOString();  
  const { data, error } = await supabase
    .from('apikeys')
    .select('token')
    .eq('token', apikey)
    .gt('expired_at', now)
    .single();

  if (error || !data) {
    return res.status(401).json({ status: false, message: 'Apikey tidak ditemukan atau sudah expired' });
  }
    
    if (!id) {
      return res.status(400).json({
        status: false,
        message: 'Parameter id harus diisi.'
      });
    }

    try {
      const result = await stalkFreeFire(id);

      if (!result.nickname) {
        return res.status(404).json({
          status: false,
          message: 'Data tidak ditemukan. Pastikan ID Free Fire yang dimasukkan benar.'
        });
      }

  
      const nickname = result.nickname || 'Tidak ditemukan';
      const regionCode = (result.region || '').toUpperCase();
      const regionFull = mooCountry(regionCode);
      const flagEmoji = regionFull.match(/[\u{1F1E6}-\u{1F1FF}]{2}/u)?.[0] || '';

      return res.status(200).json({
        status: true,
        nickname,
        region: regionFull,
        region_flag: flagEmoji
      });
    } catch (error) {
      return res.status(500).json({
        status: false,
        message: 'Internal server error',
        error: error.message
      });
    }
  });
};
